{"ast":null,"code":"import { catchError, throwError } from 'rxjs';\nimport { MainComponent } from \"./main.component\";\nimport * as i0 from \"@angular/core\";\nexport let ErrorInterceptor = /*#__PURE__*/(() => {\n  class ErrorInterceptor {\n    constructor() {}\n    intercept(request, next) {\n      return next.handle(request).pipe(catchError(err => {\n        if ([401, 403].indexOf(err.status) !== -1) {\n          // auto logout if 401 Unauthorized or 403 Forbidden response returned from api\n          MainComponent.LogOut();\n          // location.reload(true);\n        }\n        const error = err.error.message || err.statusText;\n        return throwError(error);\n      }));\n    }\n    static ɵfac = function ErrorInterceptor_Factory(t) {\n      return new (t || ErrorInterceptor)();\n    };\n    static ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: ErrorInterceptor,\n      factory: ErrorInterceptor.ɵfac\n    });\n  }\n  return ErrorInterceptor;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}